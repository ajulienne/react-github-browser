{"version":3,"sources":["apis/github.js","actions/index.js","components/SearchBar/SearchBar.jsx","utils/color.js","components/Repository/Repository.jsx","components/PopularRepositories/PopularRepositories.jsx","utils/number.js","components/UserDetail/UserDetail.jsx","components/UserProfile/UserProfile.jsx","components/Hero/Hero.jsx","components/Footer/Footer.jsx","components/CodeBlock/CodeBlock.jsx","components/Dropdown/Dropdown.jsx","components/RepositoryDetail/RepositoryDetail.jsx","components/Errors/Errors.jsx","components/Loader/Loader.jsx","components/LoaderWrapper/LoaderWrapper.jsx","components/App/App.jsx","reducers/index.js","serviceWorker.js","index.js"],"names":["cache","setupCache","maxAge","exclude","query","axios","create","baseURL","adapter","fetchUserAndRepos","githubLogin","dispatch","getState","a","async","clearData","loadingUserData","fetchUserData","user","error","loadingRepositoriesData","fetchUserRepositories","type","github","get","response","data","login","name","company","location","blog","bio","public_repos","public_gists","followers","following","avatar_url","html_url","payload","params","sort","direction","repositories","map","repo","description","fork","language","forks_count","fetchUserRepository","repositoryName","readme","full_name","owner","ssh_url","git_url","clone_url","homepage","license","subscribers_count","content","Searchbar","state","redirect","handleQueryChange","e","setState","target","value","handleSearch","preventDefault","split","length","pop","this","to","className","onSubmit","placeholder","onChange","React","Component","mapDispatchToProps","searchProfile","searchRepository","connect","stringToColour","str","hash","i","toLowerCase","charCodeAt","colour","toString","substr","getContrast","hexcolor","slice","parseInt","withRouter","props","tagStyle","backgroundColor","color","pathname","style","PopularRepositories","key","SYMBOLS","abbreviateNumber","number","tier","Math","log10","toFixed","suffix","pow","UserDetail","listEntries","push","icon","node","href","src","alt","el","UserProfile","fetch","match","compose","Hero","Footer","position","top","CodeBlock","okaidia","PureComponent","defaultProps","Dropdown","dropdownClass","toggleDropdown","aria-haspopup","aria-controls","onClick","aria-hidden","id","role","RepositoryDetail","repoName","renderers","code","escapeHtml","source","decodeURIComponent","atob","c","join","repository","errors","errorNodes","Object","entries","msg","status","replace","toUpperCase","n","Loader","loading","textAlign","App","path","render","initialState","profileReducer","action","Boolean","window","hostname","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc443581.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setupCache } from 'axios-cache-adapter';\n\nconst cache = setupCache({\n  maxAge: 15 * 60 * 1000, // 15 minutes cache\n  exclude: { query: false } // Cache query params too\n});\n\nexport default axios.create({\n  baseURL: 'https://api.github.com',\n  adapter: cache.adapter\n});\n","import github from \"../apis/github\";\n\nexport const CLEAR_DATA = '[STORE] Clear';\n\nexport const FETCH_USER_DATA = '[USER] Fetch Data';\nexport const FETCH_USER_LOADING = '[USER] Load Data';\nexport const FETCH_USER_ERROR = '[USER] Fetch User Data Error';\n\nexport const FETCH_REPOSITORIES_DATA = '[REPOSITORIES] Fetch Repositories';\nexport const FETCH_REPOSITORIES_LOADING = '[REPOSITORIES] Load Data';\nexport const FETCH_REPOSITORIES_ERROR = '[REPOSITORIES] Fetch Repositories Error';\n\nexport const FETCH_REPOSITORY_DATA = '[REPOSITORY] Fetch Repository';\nexport const FETCH_REPOSITORY_LOADING = '[REPOSITORY] Load Data';\nexport const FETCH_REPOSITORY_ERROR = '[REPOSITORY] Fetch Repository Error';\nexport const FETCH_REPOSITORY_README = '[REPOSITORY] Fetch Readme';\n\n/**\n * Combined action creator\n * \n * Dispatch actions to make multiple API calls - fetch a user data and its repositories\n * @param {string} githubLogin github login \n */\nexport const fetchUserAndRepos = githubLogin => async (dispatch, getState) => {\n  dispatch(clearData());\n  dispatch(loadingUserData());\n  await dispatch(fetchUserData(githubLogin))\n  if (!getState().user.error) { // Don't fetch repository data if the user API call fails\n    dispatch(loadingRepositoriesData());\n    dispatch(fetchUserRepositories(githubLogin));\n  }\n}\n\nexport const clearData = () => {\n  return {\n    type: CLEAR_DATA\n  }\n}\n\n/**\n * Action creator\n * \n * Set the loading state of the user tree\n */\nexport const loadingUserData = () => {\n  return {\n    type: FETCH_USER_LOADING\n  }\n}\n\n/**\n * Action creator\n * \n * Set the loading state of the repositories list tree\n */\nexport const loadingRepositoriesData = () => {\n  return {\n    type: FETCH_REPOSITORIES_LOADING\n  }\n}\n\n/**\n * Action creator\n * \n * Set the loading state of the repository tree\n */\nexport const loadingRepositoryData = () => {\n  return {\n    type: FETCH_REPOSITORY_LOADING\n  }\n}\n\n/**\n * Action creator\n * \n * Set an API call error when fetching user data\n * @param error HTTP error\n */\nexport const fetchUserError = error => {\n  return {\n    type: FETCH_USER_ERROR,\n    payload: error\n  }\n}\n\n/**\n * Action creator\n * \n * Set an API call error when fetching user repositories\n * @param error  HTTP error\n */\nexport const fetchRepositoriesError = error => {\n  return {\n    type: FETCH_REPOSITORIES_ERROR,\n    payload: error\n  }\n}\n\n/**\n * Action creator\n * \n * Set an API call error when fetching a user's repository\n * @param error  HTTP error\n */\nexport const fetchRepositoryError = error => {\n  return {\n    type: FETCH_REPOSITORY_ERROR,\n    payload: error\n  }\n}\n\n/**\n * Async action creator\n * \n * Github API call to get the data of a user\n * @param {string} githubLogin github login\n */\nexport const fetchUserData = githubLogin => async dispatch => {\n  try {\n    const response = await github.get(`/users/${githubLogin}`);\n\n    const {\n      login,\n      name,\n      type,\n      company,\n      location,\n      blog,\n      bio,\n      public_repos,\n      public_gists,\n      followers,\n      following,\n      avatar_url,\n      html_url\n    } = response.data;\n\n    dispatch({\n      type: FETCH_USER_DATA,\n      payload: {\n        login,\n        type,\n        name,\n        company,\n        location,\n        blog,\n        bio,\n        public_repos,\n        public_gists,\n        followers,\n        following,\n        avatar_url,\n        html_url\n      }\n    });\n  } catch(err) {\n    dispatch(fetchUserError(err.response));\n  }\n}\n\n/**\n * Github API call to get the repositories of a user\n * @param {string} githubLogin github login\n */\nexport const fetchUserRepositories = githubLogin => async dispatch => {\n  try {\n    // Get the 6 newest repository, sorted by last updated\n    const response = await github.get(`/users/${githubLogin}/repos`, {\n      params: {\n        sort: 'updated',\n        direction: 'DESC'\n      }\n    });\n\n    const repositories = response.data.map(repo => {\n      const { name, html_url, description, fork, language, forks_count } = repo;\n      return {\n        name,\n        html_url,\n        description,\n        fork,\n        language,\n        forks_count\n      }\n    });\n\n    dispatch({\n      type: FETCH_REPOSITORIES_DATA,\n      payload: repositories\n    });\n  } catch(err) {\n    dispatch(fetchRepositoriesError(err.response));\n  }\n}\n\n/**\n * Github API call to get the repositories of a user\n * @param {string} githubLogin github login\n */\nexport const fetchUserRepository = (githubLogin, repositoryName) => async dispatch => {\n  dispatch(clearData());\n  dispatch(loadingRepositoryData());\n\n  try {\n    // Get the 6 newest repository, sorted by last updated\n    const response = await github.get(`/repos/${githubLogin}/${repositoryName}`);\n    const readme = await github.get(`/repos/${githubLogin}/${repositoryName}/readme`);\n\n    const {\n      name,\n      full_name,\n      html_url,\n      owner,\n      description,\n      fork,\n      ssh_url,\n      git_url,\n      clone_url,\n      homepage,\n      license,\n      subscribers_count,\n      language,\n      forks_count\n    } = response.data;\n\n    dispatch({\n      type: FETCH_REPOSITORY_DATA,\n      payload: {\n        name,\n        full_name,\n        html_url,\n        owner,\n        description,\n        fork,\n        ssh_url,\n        git_url,\n        clone_url,\n        homepage,\n        license,\n        subscribers_count,\n        language,\n        forks_count,\n        readme: readme.data.content\n      }\n    });\n  } catch(err) {\n    dispatch(fetchRepositoryError(err.response));\n  }\n}","import React, { Fragment } from 'react';\nimport { fetchUserAndRepos, fetchUserRepository } from '../../actions';\nimport { connect } from 'react-redux';\nimport './SearchBar.css';\nimport { Redirect } from 'react-router-dom';\n\nclass Searchbar extends React.Component {\n\n  state = {\n    query: null,\n    redirect: null\n  };\n\n  handleQueryChange = (e) => {\n    this.setState({query: e.target.value});\n  }\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    if (this.state.query) {\n      const split = this.state.query.split('/');\n      if (split.length === 2 && !split[1]) {\n        split.pop();\n      }\n      if (split.length > 2) {// wrong\n        // TODO error\n      } else if (split.length === 2) {\n        this.setState({redirect:`/${split[0]}/${split[1]}`});\n      } else {\n        this.setState({redirect:`/${split[0]}`});\n      }\n    }\n  }\n\n  render() {\n\n    return (\n      <Fragment>\n      {this.state.redirect && <Redirect to={this.state.redirect} />}\n      <form className=\"search-bar\" onSubmit={this.handleSearch}>\n        <div className=\"field has-addons\">\n          <div className=\"control has-icons-left is-expanded\">\n            <input type=\"text\" className=\"input is-large\" placeholder=\"e.g. github or reduxjs/redux\" onChange={this.handleQueryChange}/>\n            <span className=\"icon is-medium is-left\">\n              <i className=\"fab fa-github fa-lg\"></i>\n            </span>\n          </div>\n          <div className=\"control\">\n            <input className=\"button is-large is-primary\" type=\"submit\" value=\"Search\" />\n          </div>\n        </div>\n      </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  searchProfile: name => fetchUserAndRepos(name),\n  searchRepository: (login, repo) => fetchUserRepository(login, repo)\n};\n\nexport default connect(null, mapDispatchToProps)(Searchbar);\n","/**\n * Generate a 6-digits hex value from a string\n * @param {string} str \n */\nexport const stringToColour = (str) => {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n      hash = str.toLowerCase().charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let colour = '#';\n  for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xFF;\n      colour += ('00' + value.toString(16)).substr(-2);\n  }\n  return colour;\n}\n\n/**\n * Get a white or black color to contrat with an input color\n * @param {string} hexcolor HEX color\n */\nexport const getContrast = (hexcolor) => {\n\n\t// If a leading # is provided, remove it\n\tif (hexcolor.slice(0, 1) === '#') {\n\t\thexcolor = hexcolor.slice(1);\n\t}\n\n\t// Convert to RGB value\n\tconst r = parseInt(hexcolor.substr(0,2),16);\n\tconst g = parseInt(hexcolor.substr(2,2),16);\n\tconst b = parseInt(hexcolor.substr(4,2),16);\n\n\t// Get YIQ ratio\n\tconst yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n\n\t// Check contrast\n\treturn (yiq >= 128) ? 'black' : 'white';\n\n};","import React, { Fragment } from \"react\";\nimport { stringToColour, getContrast } from \"../../utils/color\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Repository(props) {\n\n  const tagStyle = {\n    backgroundColor: stringToColour(props.data.language || 'other'),\n    color: getContrast(stringToColour(props.data.language || 'other'))\n  };\n\n  return (\n    <div className=\"tile is-parent is-6 is-vertical\">\n      <div className=\"tile is-child box\">\n        <article className=\"media\">\n          <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <strong><Link to={props.location.pathname + '/' + props.data.name}>{props.data.name}</Link></strong><br />\n              {props.data.description}\n            </p>\n          </div>\n          <nav className=\"level is-desktop\">\n            <div className=\"level-left\">\n              <span className=\"level-item tag\" style={tagStyle}>{props.data.language || 'Other'}</span>\n              { props.data.forks_count > 0 && (\n              <Fragment>\n                <span className=\"icon\"><i className=\"fas fa-code-branch\"></i></span>\n                <span className=\"fork-count\">{props.data.forks_count}</span>\n              </Fragment>\n              ) }\n            </div>\n          </nav>\n          </div>\n          \n        </article>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Repository);","import React from \"react\";\nimport Repository from \"../Repository/Repository\";\nimport './PopularRepositories.css';\n\nfunction PopularRepositories(props) {\n  return (\n    <div className=\"tile is-ancestor wrap repositories\">\n      {props.data.map((repo, key) => {\n        return <Repository key={key} data={repo} />\n      })}\n    </div>\n  );\n}\n\nexport default PopularRepositories;","const SYMBOLS = [\"\", \"k\", \"M\"];\n\n/**\n * Abbreviate a number by tier (thousands, millions)\n * @param {number} number input number (e.g. 127348)\n * @returns {string} the abbreviated number (e.g. 127k) \n */\nexport const abbreviateNumber = number => {\n    var tier = Math.log10(number) / 3 | 0;\n    if (tier === 0) {\n      return number.toFixed(0).toString();\n    }\n\n    var suffix = SYMBOLS[tier];\n    var scale = Math.pow(10, tier * 3);\n\n    // scale the number\n    var scaled = number / scale;\n\n    return scaled.toFixed(0) + suffix;\n}\n\n/**\n * Decode a base64 string in unicode \n * @param {string} str base64 value\n */\nexport const b64DecodeUnicode = str => {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return decodeURIComponent(atob(str).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}","import React from \"react\";\nimport './UserDetail.css';\nimport { abbreviateNumber } from \"../../utils/number\";\n\nfunction UserDetail(props) {\n\n  let listEntries = [];\n  if (props.data.location) {\n    listEntries.push({icon: \"fas fa-map-marker-alt\", node: props.data.location});\n  }\n  if (props.data.company) {\n    listEntries.push({icon: \"fas fa-building\", node: props.data.company});\n  }\n  if (props.data.blog) {\n    listEntries.push({icon: \"fas fa-link\", node: <a href={props.data.blog}>{props.data.blog}</a>});\n  }\n\n  return (\n    <div className=\"columns is-desktop user-detail is-vcentered\">\n      <div className=\"column is-one-third\">\n        <div className=\"columns\">\n          <div className=\"column is-one-quarter\">\n          <img className=\"avatar\" src={props.data.avatar_url} alt=\"github avatar\"/>\n          </div>\n          <div className=\"column\">\n            <h1 className=\"title\"><a href={props.data.html_url}>{props.data.name}</a></h1>\n            <h2 className=\"subtitle\">{props.data.login}</h2>\n          </div>\n        </div>\n        <div className=\"content\">\n          <ul className=\"without-style\">\n            {listEntries.map((el, key) => <li key={key}><span className=\"icon\"><i className={el.icon}></i></span>{el.node}</li>)}\n          </ul>\n          {props.data.blog && (<p>\n            {props.data.bio}\n          </p>)}\n        </div>\n      </div>\n      <div className=\"column\">\n      <nav className=\"level\">\n        <div className=\"level-item has-text-centered\">\n          <div>\n            <p className=\"heading\">Repositories</p>\n            <p className=\"title\">{abbreviateNumber(props.data.public_repos)}</p>\n          </div>\n        </div>\n        <div className=\"level-item has-text-centered\">\n          <div>\n            <p className=\"heading\">Following</p>\n            <p className=\"title\">{abbreviateNumber(props.data.following)}</p>\n          </div>\n        </div>\n        <div className=\"level-item has-text-centered\">\n          <div>\n            <p className=\"heading\">Followers</p>\n            <p className=\"title\">{abbreviateNumber(props.data.followers)}</p>\n          </div>\n        </div>\n        <div className=\"level-item has-text-centered\">\n          <div>\n            <p className=\"heading\">Gists</p>\n            <p className=\"title\">{abbreviateNumber(props.data.public_gists)}</p>\n          </div>\n        </div>\n      </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default UserDetail;","import React from \"react\";\nimport PopularRepositories from \"../PopularRepositories/PopularRepositories\";\nimport UserDetail from \"../UserDetail/UserDetail\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchUserAndRepos } from \"../../actions\";\nimport { compose } from \"redux\";\n\nclass UserProfile extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.fetch(this.props.match.params.githubLogin);\n  }\n\n  render() {\n    return (\n      <div className=\"user-profile\">\n        { this.props.user.data && <UserDetail data={this.props.user.data} /> }\n        { this.props.repositories.data && <PopularRepositories data={this.props.repositories.data} /> }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nconst mapDispatchToProps = {\n  fetch: login => fetchUserAndRepos(login)\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(UserProfile);\n","import React from 'react';\n\nconst Hero = () => {\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">\n            Github browser\n          </h1>\n          <h2 className=\"subtitle\">\n            Search the Github API to look for user, organization or repositories<br />\n          </h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n          Made by <a href=\"https://github.com/ajulienne\">Antoine Julienne</a> with <strong>React</strong> and <strong>Redux</strong>.<br />\n          View source on <a href=\"https://github.com/ajulienne/react-github-profiles\"><span className=\"icon\" style={{position: \"relative\", top: \"3px\"}}><i className=\"fab fa-github-alt\"></i></span>Github</a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\n/**\n * Redefinition of code blocks with syntax highlighting\n */\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={okaidia}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React from \"react\";\nimport \"./Dropdown.css\";\n\nclass Dropdown extends React.Component {\n\n    state = {\n        dropdownClass: ''\n    };\n\n    toggleDropdown = () => {\n        this.setState({dropdownClass : this.state.dropdownClass === '' ? 'is-active' : ''});\n    }\n\n\n    render() {\n        return (\n            <div className={this.state.dropdownClass + ' dropdown is-right'}>\n                <div className=\"dropdown-trigger\">\n                    <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu\" onClick={this.toggleDropdown}>\n                    <span>Clone</span>\n                    <span className=\"icon is-small\">\n                        <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                    </span>\n                    </button>\n                </div>\n                <div className=\"dropdown-menu max-content\" id=\"dropdown-menu\" role=\"menu\">\n                    <div className=\"dropdown-content\">\n\n                        <div className=\"dropdown-item\">\n                            <p><strong>HTTPS</strong> <code>{this.props.clone_url}</code></p>\n                        </div>\n                        <hr className=\"dropdown-divider\" />\n                        <div className=\"dropdown-item\">\n                            <p><strong>SSH</strong> <code>{this.props.ssh_url}</code></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Dropdown;","import React, { Fragment } from \"react\";\nimport \"./RepositoryDetail.css\";\nimport { stringToColour, getContrast } from \"../../utils/color\";\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"../CodeBlock/CodeBlock\";\nimport { b64DecodeUnicode } from \"../../utils/number\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { connect } from \"react-redux\";\nimport { fetchUserRepository } from \"../../actions\";\nimport { compose } from \"redux\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nclass RepositoryDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.tagStyle = {\n      backgroundColor: stringToColour(props.repo?.language || \"other\"),\n      color: getContrast(stringToColour(props.repo?.language || \"other\"))\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetch(\n      this.props.match.params.githubLogin,\n      this.props.match.params.repoName\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.props.repo !== null && (\n          <div className=\"box repository\">\n            <article className=\"media\">\n              <div className=\"media-content\">\n                <div className=\"content\">\n                  <h1 className=\"title\">\n                    <Link\n                      className=\"thinner\"\n                      to={\"/\" + this.props.repo.owner.login}\n                    >\n                      {this.props.repo.owner.login}\n                    </Link>{\" \"}\n                    / {this.props.repo.name}\n                  </h1>\n                  <p>{this.props.repo.description}</p>\n                </div>\n                <nav className=\"level\">\n                  <div className=\"level-item has-text-centered\">\n                    <span className=\"level-item tag\" style={this.tagStyle}>\n                      {this.props.repo.language || \"Other\"}\n                    </span>\n                  </div>\n                  <div className=\"level-item has-text-centered\">\n                    <p>\n                      <span className=\"icon lowered\">\n                        <i className=\"fas fa-code-branch\"></i>\n                      </span>\n                      {this.props.repo.forks_count}&nbsp;Forks\n                    </p>\n                  </div>\n                  <div className=\"level-item has-text-centered\">\n                    <p>\n                      <span className=\"icon lowered\">\n                        <i className=\"fas fa-balance-scale\"></i>\n                      </span>\n                      &nbsp;{this.props.repo.license?.name || \"Other\"}\n                    </p>\n                  </div>\n                  <div className=\"level-item has-text-centered\">\n                    <p>\n                      <span className=\"icon lowered\">\n                        <i className=\"fas fa-eye\"></i>\n                      </span>\n                      {this.props.repo.subscribers_count}&nbsp;Subscribers\n                    </p>\n                  </div>\n                  <div className=\"level-item has-text-centered\">\n                    <Dropdown\n                      clone_url={this.props.repo.clone_url}\n                      ssh_url={this.props.repo.ssh_url}\n                    />\n                  </div>\n                </nav>\n                <hr />\n                {this.props.repo.readme && (\n                  <ReactMarkdown\n                    renderers={{ code: CodeBlock }}\n                    escapeHtml={false}\n                    className=\"content\"\n                    source={b64DecodeUnicode(this.props.repo.readme)}\n                  />\n                )}\n              </div>\n            </article>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    repo: state.repository.data\n  };\n};\n\nconst mapDispatchToProps = {\n  fetch: (githubLogin, repoName) => fetchUserRepository(githubLogin, repoName)\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(RepositoryDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Errors = props => {\n\n    let errorNodes = [];\n\n    for (let [key, value] of Object.entries(props.errors)) {\n        if (value) {\n            let msg;\n            if (value.status === 404) {\n                msg = `${key.replace(/^\\w/, c => c.toUpperCase())} not found.`\n            } else {\n                msg = `Error while fetching ${key}.`\n            }\n            errorNodes.push(<div className=\"notification is-danger\" key={key}>{msg}</div>)\n        }\n    }\n\n    return errorNodes.map(n => n);\n}\n\nconst mapStateToProps = state => {\n    return {\n        errors: {\n            user: state.user.error,\n            repositories: state.repositories.error,\n            repository: state.repository.error\n        }\n    };\n}\n\nexport default connect(mapStateToProps)(Errors);","import React from 'react';\nimport './Loader.css'\n\n/**\n * Loader element.\n * Source: https://loading.io/css/\n */\nconst Loader = () => {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../Loader/Loader\";\n\nconst LoaderWrapper = props => {\n    return (props.loading.user || props.loading.repositories || props.loading.repository) && <div style={{textAlign: 'center'}}><Loader /></div>;\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: {\n            user: state.user.loading,\n            repositories: state.repositories.loading,\n            repository: state.repository.loading,\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(LoaderWrapper);","import React, { Fragment } from 'react';\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\n\nimport Searchbar from '../SearchBar/SearchBar';\nimport UserProfile from '../UserProfile/UserProfile';\nimport Hero from '../Hero/Hero';\nimport './App.css';\nimport Footer from '../Footer/Footer';\nimport RepositoryDetail from '../RepositoryDetail/RepositoryDetail';\nimport Errors from '../Errors/Errors';\nimport LoaderWrapper from '../LoaderWrapper/LoaderWrapper';\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Hero />\n      <div className=\"App container\">\n        <HashRouter>\n          <Searchbar />\n          <Errors />\n          <Switch>\n            <Route path=\"/:githubLogin/:repoName\" render={(props) => (\n              <RepositoryDetail key={props.match.params.githubLogin + '/' + props.match.params.repoName} {...props} />\n            )} />\n            <Route path=\"/:githubLogin\" render={(props) => (\n              <UserProfile key={props.match.params.githubLogin} {...props} />\n            )} />\n          </Switch>\n        </HashRouter>\n        <LoaderWrapper />\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_USER_DATA,\n  FETCH_USER_ERROR,\n  FETCH_REPOSITORIES_ERROR,\n  FETCH_USER_LOADING,\n  FETCH_REPOSITORIES_LOADING,\n  FETCH_REPOSITORIES_DATA,\n  CLEAR_DATA,\n  FETCH_REPOSITORY_DATA,\n  FETCH_REPOSITORY_LOADING,\n  FETCH_REPOSITORY_ERROR\n} from \"../actions\";\n\nconst initialState = {\n  user: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  repositories: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  repository: {\n    data: null,\n    loading: false,\n    error: null\n  }\n}\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CLEAR_DATA:\n      return initialState;\n    case FETCH_USER_DATA:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          data: action.payload,\n          loading: false,\n          error: null\n        }\n      };\n    case FETCH_REPOSITORIES_DATA:\n      return {\n        ...state,\n        repositories: {\n          ...state.repositories,\n          data: action.payload,\n          loading: false,\n          error: null\n        }\n      }\n    case FETCH_REPOSITORY_DATA:\n      return {\n        ...state,\n        repository: {\n          ...state.repository,\n          data: action.payload,\n          loading: false,\n          error: null\n        }\n      };\n    case FETCH_USER_LOADING:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          loading: true\n        }\n      };\n    case FETCH_REPOSITORIES_LOADING:\n      return {\n        ...state,\n        repositories: {\n          ...state.repositories,\n          loading: true\n        }\n      };\n    case FETCH_REPOSITORY_LOADING:\n      return {\n        ...state,\n        repository: {\n          ...state.repository,\n          loading: true\n        }\n      };\n    case FETCH_USER_ERROR:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          loading: false,\n          error: action.payload\n        }\n      };\n    case FETCH_REPOSITORIES_ERROR:\n      return {\n        ...state,\n        repositories: {\n          ...state.repositories,\n          loading: false,\n          error: action.payload\n        }\n      };\n    case FETCH_REPOSITORY_ERROR:\n      return {\n        ...state,\n        repository: {\n          ...state.repository,\n          loading: false,\n          error: action.payload\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App/App';\nimport profileReducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = createStore(\n  profileReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}